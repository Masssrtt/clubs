import os
import logging
import asyncio
from aiogram import Bot, Dispatcher
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from dotenv import load_dotenv
import ar  # –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ –¥–ª—è API Brawl Stars

load_dotenv()

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤ –∑ .env
BOT_TOKEN = os.getenv("BOT_TOKEN")
BRAWL_API_TOKEN = os.getenv("BRAWL_API_TOKEN")
CHANNEL_ID = int(os.getenv("CHANNEL_ID"))
POST_ID = int(os.getenv("POST_ID"))

# –°–ø–∏—Å–æ–∫ –∫–ª—É–±—ñ–≤
CLUBS = {
    "KT the champion": "2RPOCQJ92",
    "KT Academy": "2YCP2QRL9",
    "KT Trailblazers": "2JJ8YVJGC",
}

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)
scheduler = AsyncIOScheduler()

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–ª—ñ—î–Ω—Ç–∞ Brawl Stars API
client = ar.Client(BRAWL_API_TOKEN)

async def get_club_info(club_tag):
    """–û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–ª—É–±—É"""
    try:
        club = await client.get_club(club_tag)
        return {
            "name": club.name,
            "trophies": club.trophies,
            "requiredTrophies": club.required_trophies,
        }
    except ar.errors.RequestError as e:
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö: {e}")
        return None

async def update_post():
    """–û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ—Å—Ç–∞ –≤ Telegram-–∫–∞–Ω–∞–ª—ñ"""
    message = "üòé–í—ñ—Ç–∞—î–º–æ –≤ —ñ–º–ø–µ—Ä—ñ—ó –∫–ª—É–±—ñ–≤ –ö–¢!\n–ú–∏ –≤—Ö–æ–¥–∏–º–æ –¥–æ –≥—ñ–ª—å–¥—ñ—ó Sun Guild‚òÄÔ∏è!\n\n–ù–∞—à—ñ –∫–ª—É–±–∏:\n"
    for club_name, club_tag in CLUBS.items():
        info = await get_club_info(club_tag)
        if info:
            message += f"üü¶{club_name} ({club_tag})\nüèÜ{info['trophies']}\nüèÜ{info['requiredTrophies']}+\nüí¨–¢–ì –ß–∞—Ç: @KT_the_champion\n\n"
    
    await bot.edit_message_text(chat_id=CHANNEL_ID, message_id=POST_ID, text=message)
    logging.info("–ü–æ—Å—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ!")

async def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    scheduler.add_job(update_post, "interval", hours=1)
    scheduler.start()
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling()

if __name__ == "__main__":
    asyncio.run(main())
